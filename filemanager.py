# —É—Ä–∞–∞–∞ —É—Ä–∞ —è —Å–¥–µ–ª–∞–ª —á—Ç–æ-—Ç–æ –ø–æ–ª–µ–∑–Ω–æ–µ
# –µ—Å–ª–∏ –∫—Ç–æ-—Ç–æ –±—É–¥–µ—Ç —á–∏—Ç–∞—Ç—å —ç—Ç–æ—Ç –∫–æ–¥ –∏–∑-–∑–∞ —á–µ–∫–µ—Ä–∞, —è –≤–∞–º —Å–æ—á—É–≤—Å—Ç–≤—É—é
# –µ—Å–ª–∏ –≤—ã –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å –≥–æ–≤–Ω–æ —á–µ–∫–µ—Ä–æ–º
# —Ç–æ –≤—ã –µ–±–ª–∞–Ω —Ç—É–ø–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏(!)
#
# /*
# * +-----------------------------------------+
# * |
# * |              V A H U E Y K O
# * |
# * |              ¬© 2024 Vahueyko
# * |
# * |       –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.
# * |       –ù–µ—Å–∞–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ
# * |       –¥–∞–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–æ –±–µ–∑
# * |       –ø–∏—Å—å–º–µ–Ω–Ω–æ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è.
# * |
# * +-----------------------------------------+
# */
import os
from telethon import types
from .. import loader, utils


@loader.tds
class FileManagerMod(loader.Module):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª–æ–≤—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä"""

    strings = {
        "name": "File Manager",
        "no_file": "–û—Ç–≤–µ—Ç—å –Ω–∞ —Ñ–∞–π–ª",
        "uploading": "–ó–∞–≥—Ä—É–∂–∞—é —Ñ–∞–π–ª, –ø–æ–≥–æ–¥–∏ –º–∞–ª–µ–Ω—å–∫–æ...",
        "upload_success": "–§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω: {}",
        "download_success": "–§–∞–π–ª —Å–∫–∞—á–∞–Ω: {}",
        "file_not_found": "–¢–∞–∫–æ–≥–æ —Ñ–∞–π–ª–∞ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ω–µ—Ç",
        "no_filename": "–¢—ã –Ω–µ —É–∫–∞–∑–∞–ª –∏–º—è —Ñ–∞–π–ª–∞",
        "downloading": "–°–∫–∞—á–∏–≤–∞—é —Ñ–∞–π–ª...",
        "no_path": "–£–∫–∞–∂–∏ –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤!",
        "path_set": "–ü—É—Ç—å –¥–ª—è —Ñ–∞–π–ª–æ–≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {}",
        "file_deleted": "–§–∞–π–ª {} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω! ",
        "file_delete_error": "–£–ø—Å! –ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª: {} üò¨",
    }

    async def client_ready(self, client, db):
        self._db = db
        self._client = client
        self._db_name = "FileManager"
        self._path = self._db.get(self._db_name, "path", "/tmp")

    @loader.owner
    async def setpathcmd(self, message):
        """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—É—Ç–∏, –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ñ–∞–π–ª–∞–º–∏."""
        args = utils.get_args_raw(message)
        if not args:
            return await utils.answer(message, self.strings["no_path"])

        self._path = args
        self._db.set(self._db_name, "path", args)
        await utils.answer(message, self.strings["path_set"].format(args))

    @loader.owner
    async def upcmd(self, message):
        """–ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä (—Ä–µ–ø–ª–µ–µ–º –Ω–∞ —Ñ–∞–π–ª)"""
        reply = await message.get_reply_message()
        if not reply or not reply.file:
            return await utils.answer(message, self.strings["no_file"])

        await utils.answer(message, self.strings["uploading"])

        file = await reply.download_media(bytes)
        filename = reply.file.name
        file_path = os.path.join(self._path, filename)

        with open(file_path, 'wb') as f:
            f.write(file)

        await utils.answer(message, self.strings["upload_success"].format(filename))

    @loader.owner
    async def dlcmd(self, message):
        """–°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª —Å —Å–µ—Ä–≤–µ—Ä–∞. –£–∫–∞–∑—ã–≤–∞—Ç—å –∏–º—è —Ñ–∞–π–ª–∞ —Ç–æ—á–Ω–æ, —Å —É—á—ë—Ç–æ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è"""
        args = utils.get_args_raw(message)
        if not args:
            return await utils.answer(message, self.strings["no_filename"])

        await utils.answer(message, self.strings["downloading"])

        file_path = os.path.join(self._path, args)
        if not os.path.exists(file_path):
            return await utils.answer(message, self.strings["file_not_found"])

        try:
            if file_path.lower().endswith(('.mp3', '.wav', '.ogg', '.m4a')):
                await message.client.send_file(
                    message.chat_id,
                    file=file_path,
                    caption=self.strings["download_success"].format(args),
                    reply_to=message.id,
                    attributes=[types.DocumentAttributeAudio(
                        duration=0,
                        title=os.path.splitext(args)[0],performer=""
                    )]
                )
            else:
                await message.client.send_file(
                    message.chat_id,
                    file=file_path,
                    caption=self.strings["download_success"].format(args),
                    reply_to=message.id,
                    force_document=True
                )
        except Exception as e:
            await utils.answer(message, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–∞–π–ª–∞: {str(e)}")

        await message.delete()

    @loader.owner
    async def lscmd(self, message):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –≤ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."""
        files = os.listdir(self._path)
        file_list = "\n".join(files)
        await utils.answer(message, f"–§–∞–π–ª—ã –≤ {self._path}:\n{file_list}")

    @loader.owner
    async def rmfcmd(self, message):
        """–£–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª —Å —Å–µ—Ä–≤–µ—Ä–∞. –£–∫–∞–∑—ã–≤–∞—Ç—å –∏–º—è —Ñ–∞–π–ª–∞ —Ç–æ—á–Ω–æ, —Å —É—á—ë—Ç–æ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è"""
        args = utils.get_args_raw(message)
        if not args:
            return await utils.answer(message, self.strings["no_filename"])

        file_path = os.path.join(self._path, args)
        if not os.path.exists(file_path):
            return await utils.answer(message, self.strings["file_not_found"])

        try:
            os.remove(file_path)
            await utils.answer(message, self.strings["file_deleted"].format(args))
        except Exception as e:
            await utils.answer(message, self.strings["file_delete_error"].format(str(e)))

# DeleteAccountRequest
# edit_2fa
# log_out
# get_me
